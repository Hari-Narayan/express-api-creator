import _Name_ from "../models/_name_.js";

export async function list(req, res) {
  try {
    const data = await _Name_.find();
    res.status(200).json({ message: "success", status: 200, data });
  } catch (error) {
    res.status(400).json({ message: "Error", status: 400, error });
  }
}

export async function create(req, res) {
  try {
    const data = await new _Name_(req.body).save();
    res.status(200).json({ message: "success", status: 200, data });
  } catch (error) {
    res.status(400).json({ message: "Error", status: 400, error });
  }
}

export async function update(req, res) {
  try {
    const { id = "" } = req.params;

    if (!id) res.status(400).json({ message: "Error", status: 400 });

    const data = await _Name_.findByIdAndUpdate(id, req.body, { new: true });
    res.status(200).json({ message: "success", status: 200, data });
  } catch (error) {
    res.status(400).json({ message: "Error", status: 400, error });
  }
}

export async function softDelete(req, res) {
  try {
    const { id = "" } = req.params;

    if (!id) res.status(400).json({ message: "Error", status: 400 });

    const data = await _Name_.findByIdAndUpdate(
      id,
      { deletedAt: Date.now() },
      { new: true }
    );
    res.status(200).json({ message: "success", status: 200, data });
  } catch (error) {
    res.status(400).json({ message: "Error", status: 400, error });
  }
}

export async function details(req, res) {
  try {
    const { id = "" } = req.params;

    if (!id) res.status(400).json({ message: "Error", status: 400 });

    let data = await _Name_.findById(id);

    if (data) res.status(200).json({ message: "success", status: 200, data });
    else res.status(404).json({ message: "Not Found!", status: 404, data });
  } catch (error) {
    res.status(400).json({ message: "Error", status: 400, error });
  }
}
